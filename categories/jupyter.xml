<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Graham Wheeler's Random Forest (Posts about Jupyter)</title><link>https://www.grahamwheeler.com/</link><description></description><atom:link href="https://www.grahamwheeler.com/categories/jupyter.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 06 May 2018 03:57:39 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Basic Machine Learning with SciKit-Learn</title><link>https://www.grahamwheeler.com/posts/basic-machine-learning.html</link><dc:creator>Graham Wheeler</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;em&gt;This is the fourth post in a series based off my &lt;a href="https://www.grahamwheeler.com/posts/(https:/github.com/gramster/pythonbootcamp"&gt;Python for Data Science bootcamp&lt;/a&gt; I run at eBay occasionally. The other posts are:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://www.grahamwheeler.com/posts/python-crash-course.html"&gt;a Python crash course&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="http://localhost:8888/notebooks/using-jupyter.ipynb"&gt;using Jupyter&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://www.grahamwheeler.com/posts/exploratory-data-analysis-with-numpy-and-pandas.html"&gt;exploratory data analysis&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In this post we will look into the basics of building ML models with Scikit-Learn. Scikit-Learn is the most widely used Python library for ML, especially outside of deep learning (where there are several contenders and I recommend using Keras, which is a package that provides a simple API on top of several underlying contenders like TensorFlow and PyTorch).&lt;/p&gt;
&lt;p&gt;We'll proceed in this fashion:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;give a brief overview of key terminology and the ML workflow&lt;/li&gt;
&lt;li&gt;illustrate the typical use of SciKit-Learn API through some simple examples&lt;/li&gt;
&lt;li&gt;discuss various metrics that can be used to evaluate ML models&lt;/li&gt;
&lt;li&gt;dive deeper with some more complex examples&lt;/li&gt;
&lt;li&gt;look at the various ways we can validate and improve our models&lt;/li&gt;
&lt;li&gt;discuss the topic of feature engineering - ML models are good examples of "garbage in, garbage out", so cleaning our data and getting the right features is important&lt;/li&gt;
&lt;li&gt;finally, summarize some of the main model techniques and their pros and cons&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.grahamwheeler.com/posts/basic-machine-learning.html"&gt;Read more…&lt;/a&gt; (42 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Data Science</category><category>Jupyter</category><category>Machine Learning</category><category>Python</category><guid>https://www.grahamwheeler.com/posts/basic-machine-learning.html</guid><pubDate>Sun, 29 Apr 2018 23:40:00 GMT</pubDate></item><item><title>Exploratory Data Analysis with NumPy and Pandas</title><link>https://www.grahamwheeler.com/posts/exploratory-data-analysis-with-numpy-and-pandas.html</link><dc:creator>Graham Wheeler</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;em&gt;This is the third post in a series based off my &lt;a href="https://github.com/gramster/pythonbootcamp"&gt;Python for Data Science bootcamp&lt;/a&gt; I run at eBay occasionally. The other posts are:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://www.grahamwheeler.com/posts/python-crash-course.html"&gt;a Python crash course&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="http://localhost:8888/notebooks/using-jupyter.ipynb"&gt;using Jupyter&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://www.grahamwheeler.com/posts/basic-machine-learning.html"&gt;introductory machine learning&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This is an introduction to the NumPy and Pandas libraries that form the foundation of data science in Python. These libraries, especially Pandas, have a large API surface and many powerful features. There is now way in a short amount of time to cover every topic; in many cases we will just scratch the surface. But after this you should understand the fundamentals, have an idea of the overall scope, and have some pointers for extending your learning as you need more functionality.&lt;/p&gt;
&lt;h3 id="Introduction"&gt;Introduction&lt;a class="anchor-link" href="https://www.grahamwheeler.com/posts/exploratory-data-analysis-with-numpy-and-pandas.html#Introduction"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;We'll start by importing the numpy and pandas packages. Note the "as" aliases; it is conventional to use "np" for numpy and "pd" for pandas. If you are using Anaconda Python distribution, as recommended for data science, these packages should already be available:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;We are going to do some plotting with the matplotlib and Seaborn packages. We want the plots to appear as cell outputs inline in Jupyter.
To do that we need to run this next line:
&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.grahamwheeler.com/posts/exploratory-data-analysis-with-numpy-and-pandas.html"&gt;Read more…&lt;/a&gt; (94 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Data Science</category><category>Jupyter</category><category>Pandas</category><category>Python</category><guid>https://www.grahamwheeler.com/posts/exploratory-data-analysis-with-numpy-and-pandas.html</guid><pubDate>Sat, 28 Apr 2018 19:40:00 GMT</pubDate></item><item><title>Using Jupyter</title><link>https://www.grahamwheeler.com/posts/using-jupyter.html</link><dc:creator>Graham Wheeler</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;em&gt;This is the second post in a series based off my &lt;a href="https://github.com/gramster/pythonbootcamp"&gt;Python for Data Science bootcamp&lt;/a&gt; I run at eBay occasionally. The other posts are:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://www.grahamwheeler.com/posts/python-crash-course.html"&gt;a Python crash course&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://www.grahamwheeler.com/posts/exploratory-data-analysis-with-numpy-and-pandas.html"&gt;exploratory data analysis&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://www.grahamwheeler.com/posts/basic-machine-learning.html"&gt;introductory machine learning&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://jupyter.org/"&gt;Jupyter&lt;/a&gt; is an interactive computing environment that allows users to create heterogeneous documents called &lt;em&gt;notebooks&lt;/em&gt; that can mix executable code, &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;markdown&lt;/a&gt; text with &lt;a href="https://www.mathjax.org/"&gt;MathJax&lt;/a&gt;, multimedia, static and interactive charts, and more. A notebook is typically a complete and self-contained record of a computation, and can be converted to various formats and shared with others. Jupyter thus supports a form of &lt;a href="https://en.wikipedia.org/wiki/Literate_programming"&gt;literate programming&lt;/a&gt;. Several of the posts on this blog, including this one, were written as Jupyter notebooks. Jupyter is an extremely popular tool for doing data science in Python due to its interactive nature, good support for iterative and experimental computation, and ability to create a finished artifact combining both scientific text (with math) and code. It's easiest to start to understand this by looking at an &lt;a href="http://nbviewer.jupyter.org/url/norvig.com/ipython/Economics.ipynb"&gt;example&lt;/a&gt; of a finished notebook.&lt;/p&gt;
&lt;p&gt;Jupyter the application combines three components:
&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.grahamwheeler.com/posts/using-jupyter.html"&gt;Read more…&lt;/a&gt; (13 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Data Science</category><category>Jupyter</category><category>Python</category><guid>https://www.grahamwheeler.com/posts/using-jupyter.html</guid><pubDate>Wed, 18 Apr 2018 04:35:00 GMT</pubDate></item><item><title>Using Jupyter as a Music Notebook</title><link>https://www.grahamwheeler.com/posts/using-jupyter-as-a-music-notebook.html</link><dc:creator>Graham Wheeler</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;I recently started playing guitar again after a long absence and wanted to start making some notes in a digital form. Unfortunately, I didn't find any good tools. There is TeX of course, which can do anything, but I was hoping for something a bit more WYSIWYGy. There are some very good tools available for musical scores (MuseScore, Frescobaldi), but I want something that is more like a traditional notebook with lots of notes interspersed with occasional musical notation (in both traditional and tablature forms).&lt;/p&gt;
&lt;p&gt;So an obvious potential candidate is Jupyter (nee IPython), but it has no support for musical notation out of the box. But it is doable and in this post I'll walk through how I got it to work on my Mac. This is also my first attempt at using a Jupyter notebook as my blog post in Nikola so I'm kiling two birds with one stone.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.grahamwheeler.com/posts/using-jupyter-as-a-music-notebook.html"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Jupyter</category><category>Python</category><guid>https://www.grahamwheeler.com/posts/using-jupyter-as-a-music-notebook.html</guid><pubDate>Sat, 27 Feb 2016 20:00:00 GMT</pubDate></item></channel></rss>